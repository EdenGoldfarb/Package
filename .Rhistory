,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,i,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
}
} else if (numberOfaa=="FULL") {
for (i in 1:length(pos)) {
firstnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
subs <- wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
listofdfs[[i]] <- subs
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(subs$start) & ticks<=max(subs$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
labels[posnt] <- c(as.character(codon["last"]),as.character(codon["middle"]),as.character(codon["first"]))
}else {labels[posnt] <- c(as.character(codon["first"]),as.character(codon["middle"]),as.character(codon["last"]))}
colors <- ifelse(labels==as.character(codon["first"]) | labels==as.character(codon["middle"]) | labels==as.character(codon["last"]), "red", "black")
if (!is.na(sum(subs$start)) & sum(subs$start)>0) {
listofplots[[k]] <- ggplot(wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,i,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
}
} else if (numberOfaa == "SINGLE") {
firstnt <- as.integer(AA_finder(aa,SINGLE,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,SINGLE,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
subs <- wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
listofdfs[[i]] <- subs
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(subs$start) & ticks<=max(subs$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
labels[posnt] <- c(as.character(codon["last"]),as.character(codon["middle"]),as.character(codon["first"]))
}else {labels[posnt] <- c(as.character(codon["first"]),as.character(codon["middle"]),as.character(codon["last"]))}
colors <- ifelse(labels==as.character(codon["first"]) | labels==as.character(codon["middle"]) | labels==as.character(codon["last"]), "red", "black")
if (!is.na(sum(subs$start)) & sum(subs$start)>0) {
listofplots[[k]] <- ggplot(wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,SINGLE,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
} else{print("Number of aa exeeded or wrong input")}
if (length(listofplots)>0) {
if (data) {
return(listofdfs)
} else {if (plot) {
gene_plotofplots = ggarrange(plotlist = listofplots,common.legend = T)
return(gene_plotofplots)
}
else{return(listofplots)}}
}else { print("No Plots")}
}
# across <- 600
Plot_vacinity(aa = "W",
geneid = geneid,
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = T)
# across <- 600
Plot_vacinity(aa = "W",
geneid = 'WARS',
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = T)
library(ggplot2)
# across <- 600
Plot_vacinity(aa = "W",
geneid = 'WARS',
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = T)
load_all()
####################################################### Plot aa vacinity #######################################################
RFPIFNaMD55A.m <- as.data.frame(import.wig("z:/edeng/NSG/runs/MD55/alignments/fp_chx_uninf_7RFPIFNaMD55A_R1/human/wig/unique_align/fp_chx_uninf_7RFPIFNaMD55A_R1_hg19.align.unique.p_offset.5_prime.merged.minus_Copy.wig"))
# across <- 600
Plot_vacinity(aa = "W",
geneid = 'WARS',
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = T)
Plot_vacinity <- function(aa,geneid,wig,bed,CDSdb,numberOfaa,SINGLE,across,genesymORucsc,exonsORcds,plot,data){
if (sum(colnames(CDS)==paste(aa,"count",sep = ""))==0) {
CDS <<- Add_AAtoCDS(aa,CDSdb)
Plot_vacinity(aa,geneid,wig,bed,CDS,numberOfaa,SINGLE,across,genesymORucsc,exonsORcds,plot,data)
}
CDS <- CDS[CDS[paste(aa,"count",sep = "")]>0,]
if (genesymORucsc=="genesym") {
pos <- str_split(as.character(CDS[CDS$geneSymbol==geneid,paste(aa,"pos",sep = "")]),pattern = ",")[[1]] %>% as.integer()
chr <- as.character(bed[bed$hg19.kgXref.geneSymbol==geneid,which(colnames(bed)=="hg19.knownGene.chrom")])
} else {
pos <- str_split(as.character(CDS[CDS$UCSCid==geneid,paste(aa,"pos",sep = "")]),pattern = ",")[[1]] %>% as.integer()
chr <- as.character(bed[bed$hg19.knownGene.name==geneid,which(colnames(bed)=="hg19.knownGene.chrom")])
}
listofplots <- list()
listofdfs <- list()
k=1
if (is.numeric(numberOfaa) & numberOfaa<length(pos)) {
for (i in 1:numberOfaa) {
firstnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
subs <- wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
listofdfs[[i]] <- subs
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(subs$start) & ticks<=max(subs$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
labels[posnt] <- c(as.character(codon["last"]),as.character(codon["middle"]),as.character(codon["first"]))
}else {labels[posnt] <- c(as.character(codon["first"]),as.character(codon["middle"]),as.character(codon["last"]))}
colors <- ifelse(labels==as.character(codon["first"]) | labels==as.character(codon["middle"]) | labels==as.character(codon["last"]), "red", "black")
if (!is.na(sum(subs$start)) & sum(subs$start)>0) {
listofplots[[k]] <- ggplot(wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,i,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
}
} else if (numberOfaa=="FULL") {
for (i in 1:length(pos)) {
firstnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
subs <- wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
listofdfs[[i]] <- subs
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(subs$start) & ticks<=max(subs$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
labels[posnt] <- c(as.character(codon["last"]),as.character(codon["middle"]),as.character(codon["first"]))
}else {labels[posnt] <- c(as.character(codon["first"]),as.character(codon["middle"]),as.character(codon["last"]))}
colors <- ifelse(labels==as.character(codon["first"]) | labels==as.character(codon["middle"]) | labels==as.character(codon["last"]), "red", "black")
if (!is.na(sum(subs$start)) & sum(subs$start)>0) {
listofplots[[k]] <- ggplot(wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,i,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
}
} else if (numberOfaa == "SINGLE") {
firstnt <- as.integer(AA_finder(aa,SINGLE,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,SINGLE,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
subs <- wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
listofdfs[[i]] <- subs
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(subs$start) & ticks<=max(subs$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
labels[posnt] <- c(as.character(codon["last"]),as.character(codon["middle"]),as.character(codon["first"]))
}else {labels[posnt] <- c(as.character(codon["first"]),as.character(codon["middle"]),as.character(codon["last"]))}
colors <- ifelse(labels==as.character(codon["first"]) | labels==as.character(codon["middle"]) | labels==as.character(codon["last"]), "red", "black")
if (!is.na(sum(subs$start)) & sum(subs$start)>0) {
listofplots[[k]] <- ggplot(wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,SINGLE,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
} else{print("Number of aa exeeded or wrong input")}
if (length(listofplots)>0) {
if (data) {
return(listofdfs)
} else {if (plot) {
gene_plotofplots = ggarrange(plotlist = listofplots,common.legend = T)
return(gene_plotofplots)
}
else{return(listofplots)}}
}else { print("No Plots")}
}
# across <- 600
Plot_vacinity(aa = "W",
geneid = 'WARS',
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = T)
aa= 'W'
geneid='WARS'
wig=RFPIFNaMD55A.m
bed=bed
CDSdb=CDS
numberOfaa = "FULL"
SINGLE = 1
across = across
plot = T
genesymORucsc = "genesym"
exonsORcds = "exons"
data = F
sum(colnames(CDS)==paste(aa,"count",sep = ""))==0
paste(aa,"count",sep = "")
pos <- str_split(as.character(CDS[CDS$geneSymbol==geneid,paste(aa,"pos",sep = "")]),pattern = ",")[[1]] %>% as.integer()
pos
chr <- as.character(bed[bed$hg19.kgXref.geneSymbol==geneid,which(colnames(bed)=="hg19.knownGene.chrom")])
chr
listofplots <- list()
listofdfs <- list()
k=1
is.numeric(numberOfaa) & numberOfaa<length(pos)
numberOfaa=="FULL"
i=1
firstnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
subs <- wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
listofdfs[[i]] <- subs
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(subs$start) & ticks<=max(subs$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
labels[posnt] <- c(as.character(codon["last"]),as.character(codon["middle"]),as.character(codon["first"]))
}else {labels[posnt] <- c(as.character(codon["first"]),as.character(codon["middle"]),as.character(codon["last"]))}
colors <- ifelse(labels==as.character(codon["first"]) | labels==as.character(codon["middle"]) | labels==as.character(codon["last"]), "red", "black")
if (!is.na(sum(subs$start)) & sum(subs$start)>0) {
listofplots[[k]] <- ggplot(wig[wig$seqnames==chr & wig$start>(firstnt-across) & wig$start<(lastnt+across),]
,mapping = aes(x = start,y = score)) +
geom_bar(stat="Identity") + ylab("Reads") + xlab("Position") + ggtitle(paste(geneid,i,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication() + scale_fill_Publication() + theme(axis.text.x = element_text(angle = 25,colour = colors))
k=k+1
}
# across <- 600
Plot_vacinity(aa = "W",
geneid = 'WARS',
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = F)
library(ggpubr)
# across <- 600
Plot_vacinity(aa = "W",
geneid = 'WARS',
wig = RFPIFNaMD55A.m,
bed = bed,CDSdb = CDS,
numberOfaa = "FULL",
SINGLE = 1,
across = across,
plot = T,
genesymORucsc = "genesym",
exonsORcds = "exons",
data = F)
geneid <- "WARS"
Plot_Gene(geneid,wig,bed,50)
# RFPIFNaMD55A.p <- as.data.frame(import.wig("z:/edeng/NSG/runs/MD55/alignments/fp_chx_uninf_7RFPIFNaMD55A_R1/human/wig/unique_align/fp_chx_uninf_7RFPIFNaMD55A_R1_hg19.align.unique.p_offset.5_prime.merged.plus_Copy.wig"))
RFPmIFNaMD55A.m <- as.data.frame(import.wig("z:/edeng/NSG/runs/MD55/alignments/fp_chx_uninf_5RFPmIFNaMD55A_S5_R1_001/human/wig/unique_align/fp_chx_uninf_5RFPmIFNaMD55A_S5_R1_001_hg19.align.unique.p_offset.5_prime.merged.minus_COPY.wig"))
Plot_vacinity_IFNvsControl(IFN_data = RFPIFNaMD55A.m,
Control_data = RFPmIFNaMD55A.m,
aa = 'W',i = 2,
geneid = geneid,
bed = bed,CDS = CDS,
across = across,
exonsORcds = "exons",
genesymORucsc = "genesym")
RFPIFNaMD55A.m
IFN_data = RFPIFNaMD55A.m
Control_data = RFPmIFNaMD55A.m
c(IFN_data = RFPIFNaMD55A.m,
Control_data = RFPmIFNaMD55A.m,
aa = 'W',i = 2,
geneid = geneid,
bed = bed,CDS = CDS,
across = across,
exonsORcds = "exons",
genesymORucsc = "genesym")
IFN_data = RFPIFNaMD55A.m
Control_data = RFPmIFNaMD55A.m
aa = 'W'
i = 2
geneid = geneid
bed = bed,CDS = CDS
across = across
exonsORcds = "exons"
genesymORucsc = "genesym"
IFN_data = RFPIFNaMD55A.m
Control_data = RFPmIFNaMD55A.m
aa = 'W'
i = 2
geneid = geneid
bed = bed
CDS = CDS
across = across
exonsORcds = "exons"
genesymORucsc = "genesym"
firstnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
firstnt
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
lastnt
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
merged <- merge(as.data.frame(IFN_data[[i]]),as.data.frame(Control_data[[i]][,c("start","score")]),by = "start",all.x = T)
RFPIFNaMD55A.p <- as.data.frame(import.wig("z:/edeng/NSG/runs/MD55/alignments/fp_chx_uninf_7RFPIFNaMD55A_R1/human/wig/unique_align/fp_chx_uninf_7RFPIFNaMD55A_R1_hg19.align.unique.p_offset.5_prime.merged.plus_Copy.wig"))
RFPmIFNaMD55A.p <- as.data.frame(import.wig("z:/edeng/NSG/runs/MD55/alignments/fp_chx_uninf_5RFPmIFNaMD55A_S5_R1_001/human/wig/unique_align/fp_chx_uninf_5RFPmIFNaMD55A_S5_R1_001_hg19.align.unique.p_offset.5_prime.merged.plus_COPY.wig"))
Plot_vacinity_IFNvsControl(IFN_data = list(RFPIFNaMD55A.m,RFPIFNaMD55A.p),
Control_data = list(RFPmIFNaMD55A.m,RFPmIFNaMD55A.p),
aa = 'W',i = 2,
geneid = geneid,
bed = bed,CDS = CDS,
across = across,
exonsORcds = "exons",
genesymORucsc = "genesym")
IFN_data = list(RFPIFNaMD55A.m,RFPIFNaMD55A.p)
Control_data=list(RFPmIFNaMD55A.m,RFPmIFNaMD55A.p)
firstnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[1])
lastnt <- as.integer(AA_finder(aa,i,geneid,bed,CDS,exonsORcds,genesymORucsc)[2])
merged <- merge(as.data.frame(IFN_data[[i]]),as.data.frame(Control_data[[i]][,c("start","score")]),by = "start",all.x = T)
merged
merged <- merge(as.data.frame(IFN_data[[i]]),as.data.frame(Control_data[[i]][,c("start","score")]),by = "start",all.x = T)
merged[is.na(merged)] <- 1
merged[,c("score.x","score.y")] <- abs(merged[,c("score.x","score.y")])
merged['IFN/Control'] <- merged[,c("score.x")]/merged[,c("score.y")]
ticks <- sort(c(seq((firstnt-across),(lastnt+across),by = 10),(firstnt:lastnt)))
ticks <- ticks[!duplicated(ticks)]
ticks <- ticks[ticks>=min(merged$start) & ticks<=max(merged$start)]
labels <- ticks
posnt <- which(ticks %in% firstnt:lastnt ,arr.ind = ticks)
codon <- unlist(CODON_finder(aa,i,genesymORucsc))
labels[posnt] <- c("",aa,"")
codon
labels[posnt] <- c("",aa,"")
aaindex <- which(labels==aa)
k=1
if (CDS[CDS$geneSymbol==geneid,"strand"]=="-") {
for (j in 1:(aaindex-2)) {
labels[j] <- 10*(aaindex-j-1)}
for (j in (aaindex+2):length(labels)) {
labels[j] <- -10*(k)
k <- k+1
}
}else{
for (j in 1:(aaindex-2)) {
labels[j] <- -10*(aaindex-j-1)}
for (j in (aaindex+2):length(labels)) {
labels[j] <- 10*(k)
k <- k+1
}
if (labels[1]=="0") {
labels[1]=""
}
}
colors <- ifelse(labels==aa,"#fdb462" , "black")
plot <- ggplot(merged ,mapping = aes(x = start,y = as.integer(merged$`IFN/Control`))) +
geom_bar(stat="Identity",fill="#386cb0") + ylab("IFN/Control") + xlab("nt") + ggtitle(paste(geneid,sep = "-")) +
scale_x_continuous(breaks = ticks,labels = labels) + theme(axis.text.x = element_text(colour = colors))+
theme_Publication(base_size = 50) + scale_fill_Publication() + theme(axis.text.x = element_text(colour = colors))
plot
chr <- as.character(bed[bed$hg19.kgXref.geneSymbol==geneid,which(colnames(bed)=="hg19.knownGene.chrom")])
start <- bed[bed$hg19.kgXref.geneSymbol==geneid,which(colnames(bed)=="hg19.knownGene.cdsStart")]
end <- bed[bed$hg19.kgXref.geneSymbol==geneid,which(colnames(bed)=="hg19.knownGene.cdsEnd")]
subs <- wig[wig$seqnames==chr & wig$start>start & wig$start<end,]
start
unload(ggplot2)
unload('ggplot2')
unload.Package('ggplot2')
unload.Package(ggplot2)
unload.Package(ggplot2)
unload.Package("ggplot2")
AA_finder(aa = "W",i = 2,
geneid = "CD44",
bed = bed,
CDSdb = CDS,
exonsORcds = "exons",
genesymORucsc = "genesym")
CODON_finder(aa,i,genesymORucsc)
load_all()
AA_finder(aa = "W",i = 2,
geneid = "CD44",
bed = bed,
CDSdb = CDS,
exonsORcds = "exons",
genesymORucsc = "genesym")
AA_finder(aa = "W",i = 6,
geneid = "CD44",
bed = bed,
CDSdb = CDS,
exonsORcds = "exons",
genesymORucsc = "genesym")
a <- AA_finder(aa = "W",i = 6,
geneid = "CD44",
bed = bed,
CDSdb = CDS,
exonsORcds = "exons",
genesymORucsc = "genesym")
writeClipboard(paste(a[3],a[2],sep = ":"))
getwd()
install.packages("desc")
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages("desc")
version('desc')
package_version('desc')
package_version(desc)
library(desc)
packageVersion("desc")
packageVersion("roxygen")
packageVersion("roxygen2")
document()
library("roxygen2")
library("devtools")
load_all()
library(Package)
library(devtools)
load_all()
library("desc")
packageVersion("desc")
library(Package)
data("CDS")
data("bed")
load_all()
library(devtools)
load_all()
aa <- get.amino.acids()
aa
library("MSnbase")
library("Peptides")
library("RGenetics")
aa <- get.amino.acids()
aa
codonTable <- geneticCodeTable(DNA = FALSE)
codonTable <- aggregate(codonTable$GeneticCode  ~ codonTable$AminoAcids,codonTable, paste,collapse=",")
codonTable
aa$AA
aa
aa <- setDT(aa)
aa
aa$AA
as.character(aa$AA)
as.character(aa$AA)[1:]
as.character(aa$AA)[1]
as.character(aa$AA)[2:length(aa$AA)]
for (i in 1:length(as.character(aa$AA)[2:length(aa$AA)])) {
Add_AAtoCDS(as.character(aa$AA)[2:length(aa$AA)][i],CDS)
}
View(CDS)
for (i in 1:length(as.character(aa$AA)[2:length(aa$AA)])) {
CDS <- Add_AAtoCDS(as.character(aa$AA)[2:length(aa$AA)][i],CDS)
}
View(CDS)
use_data(CDS,overwrite = T)
use_data(CDS,compress = 'gzip',overwrite = T)
use_data(CDS,compress = 'bzip2',overwrite = T)
document()
document()
aa <- get.amino.acids()
codonTable <- geneticCodeTable(DNA = FALSE)
codonTable <- aggregate(codonTable$GeneticCode  ~ codonTable$AminoAcids,codonTable, paste,collapse=",")
codonTable
aa <- merge(aa,codonTable,by.x = 'Abbrev3',by.y = 'codonTable$AminoAcids')
aa
codonTable <- aa
use_data(codonTable)
load_all()
load_all()
library(Package)
